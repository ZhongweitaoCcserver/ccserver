// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bankhall.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "bankhall.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ccserver {

namespace {

const ::google::protobuf::Descriptor* time_stamp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  time_stamp_reflection_ = NULL;
const ::google::protobuf::Descriptor* app_inter_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  app_inter_reflection_ = NULL;
const ::google::protobuf::Descriptor* outs_head_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  outs_head_reflection_ = NULL;
const ::google::protobuf::Descriptor* outsourcing_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  outsourcing_reflection_ = NULL;
const ::google::protobuf::Descriptor* withdraw_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  withdraw_reflection_ = NULL;
const ::google::protobuf::Descriptor* deposit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  deposit_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_bankhall_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_bankhall_2eproto() {
  protobuf_AddDesc_bankhall_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "bankhall.proto");
  GOOGLE_CHECK(file != NULL);
  time_stamp_descriptor_ = file->message_type(0);
  static const int time_stamp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(time_stamp, stamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(time_stamp, label_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(time_stamp, stamp_str_),
  };
  time_stamp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      time_stamp_descriptor_,
      time_stamp::default_instance_,
      time_stamp_offsets_,
      -1,
      -1,
      -1,
      sizeof(time_stamp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(time_stamp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(time_stamp, _is_default_instance_));
  app_inter_descriptor_ = file->message_type(1);
  static const int app_inter_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(app_inter, listen_fid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(app_inter, epoll_fid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(app_inter, conn_fid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(app_inter, cipher_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(app_inter, fid_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(app_inter, bussness_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(app_inter, command_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(app_inter, args_class_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(app_inter, args_cont_idx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(app_inter, info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(app_inter, busness_msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(app_inter, ts_),
  };
  app_inter_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      app_inter_descriptor_,
      app_inter::default_instance_,
      app_inter_offsets_,
      -1,
      -1,
      -1,
      sizeof(app_inter),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(app_inter, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(app_inter, _is_default_instance_));
  outs_head_descriptor_ = file->message_type(2);
  static const int outs_head_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(outs_head, feedback_port_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(outs_head, feeback_ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(outs_head, message_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(outs_head, whoami_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(outs_head, signature_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(outs_head, info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(outs_head, ts_),
  };
  outs_head_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      outs_head_descriptor_,
      outs_head::default_instance_,
      outs_head_offsets_,
      -1,
      -1,
      -1,
      sizeof(outs_head),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(outs_head, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(outs_head, _is_default_instance_));
  outsourcing_descriptor_ = file->message_type(3);
  static const int outsourcing_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(outsourcing, head_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(outsourcing, data_),
  };
  outsourcing_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      outsourcing_descriptor_,
      outsourcing::default_instance_,
      outsourcing_offsets_,
      -1,
      -1,
      -1,
      sizeof(outsourcing),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(outsourcing, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(outsourcing, _is_default_instance_));
  withdraw_descriptor_ = file->message_type(4);
  static const int withdraw_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(withdraw, bus_msg_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(withdraw, serial_no_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(withdraw, card_no_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(withdraw, amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(withdraw, customer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(withdraw, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(withdraw, ts_),
  };
  withdraw_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      withdraw_descriptor_,
      withdraw::default_instance_,
      withdraw_offsets_,
      -1,
      -1,
      -1,
      sizeof(withdraw),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(withdraw, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(withdraw, _is_default_instance_));
  deposit_descriptor_ = file->message_type(5);
  static const int deposit_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(deposit, bus_msg_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(deposit, serial_no_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(deposit, card_no_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(deposit, amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(deposit, customer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(deposit, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(deposit, ts_),
  };
  deposit_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      deposit_descriptor_,
      deposit::default_instance_,
      deposit_offsets_,
      -1,
      -1,
      -1,
      sizeof(deposit),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(deposit, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(deposit, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_bankhall_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      time_stamp_descriptor_, &time_stamp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      app_inter_descriptor_, &app_inter::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      outs_head_descriptor_, &outs_head::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      outsourcing_descriptor_, &outsourcing::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      withdraw_descriptor_, &withdraw::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      deposit_descriptor_, &deposit::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_bankhall_2eproto() {
  delete time_stamp::default_instance_;
  delete time_stamp_reflection_;
  delete app_inter::default_instance_;
  delete app_inter_reflection_;
  delete outs_head::default_instance_;
  delete outs_head_reflection_;
  delete outsourcing::default_instance_;
  delete outsourcing_reflection_;
  delete withdraw::default_instance_;
  delete withdraw_reflection_;
  delete deposit::default_instance_;
  delete deposit_reflection_;
}

void protobuf_AddDesc_bankhall_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_bankhall_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016bankhall.proto\022\010ccserver\"=\n\ntime_stamp"
    "\022\r\n\005stamp\030\001 \001(\022\022\r\n\005label\030\002 \001(\t\022\021\n\tstamp_"
    "str\030\003 \001(\t\"\376\001\n\tapp_inter\022\022\n\nlisten_fid\030\002 "
    "\001(\021\022\021\n\tepoll_fid\030\003 \001(\021\022\020\n\010conn_fid\030\004 \001(\021"
    "\022\016\n\006cipher\030\005 \001(\t\022\020\n\010fid_type\030\006 \001(\t\022\025\n\rbu"
    "ssness_name\030\007 \001(\t\022\017\n\007command\030\010 \001(\021\022\022\n\nar"
    "gs_class\030\t \001(\t\022\025\n\rargs_cont_idx\030\n \001(\021\022\014\n"
    "\004info\030\013 \001(\t\022\023\n\013busness_msg\030\016 \001(\014\022 \n\002ts\030\017"
    " \003(\0132\024.ccserver.time_stamp\"\235\001\n\touts_head"
    "\022\025\n\rfeedback_port\030\001 \001(\021\022\022\n\nfeeback_ip\030\002 "
    "\001(\t\022\022\n\nmessage_id\030\003 \001(\t\022\016\n\006whoami\030\004 \001(\t\022"
    "\021\n\tsignature\030\005 \001(\t\022\014\n\004info\030\006 \001(\t\022 \n\002ts\030\016"
    " \003(\0132\024.ccserver.time_stamp\">\n\013outsourcin"
    "g\022!\n\004head\030\001 \003(\0132\023.ccserver.outs_head\022\014\n\004"
    "data\030\017 \001(\014\"\224\001\n\010withdraw\022\022\n\nbus_msg_id\030\001 "
    "\001(\t\022\021\n\tserial_no\030\002 \001(\t\022\017\n\007card_no\030\003 \001(\t\022"
    "\016\n\006amount\030\004 \001(\021\022\020\n\010customer\030\005 \001(\t\022\014\n\004tim"
    "e\030\006 \001(\t\022 \n\002ts\030\017 \003(\0132\024.ccserver.time_stam"
    "p\"\223\001\n\007deposit\022\022\n\nbus_msg_id\030\001 \001(\t\022\021\n\tser"
    "ial_no\030\002 \001(\t\022\017\n\007card_no\030\003 \001(\t\022\016\n\006amount\030"
    "\004 \001(\021\022\020\n\010customer\030\005 \001(\t\022\014\n\004time\030\006 \001(\t\022 \n"
    "\002ts\030\017 \003(\0132\024.ccserver.time_stampb\006proto3", 879);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "bankhall.proto", &protobuf_RegisterTypes);
  time_stamp::default_instance_ = new time_stamp();
  app_inter::default_instance_ = new app_inter();
  outs_head::default_instance_ = new outs_head();
  outsourcing::default_instance_ = new outsourcing();
  withdraw::default_instance_ = new withdraw();
  deposit::default_instance_ = new deposit();
  time_stamp::default_instance_->InitAsDefaultInstance();
  app_inter::default_instance_->InitAsDefaultInstance();
  outs_head::default_instance_->InitAsDefaultInstance();
  outsourcing::default_instance_->InitAsDefaultInstance();
  withdraw::default_instance_->InitAsDefaultInstance();
  deposit::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_bankhall_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_bankhall_2eproto {
  StaticDescriptorInitializer_bankhall_2eproto() {
    protobuf_AddDesc_bankhall_2eproto();
  }
} static_descriptor_initializer_bankhall_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int time_stamp::kStampFieldNumber;
const int time_stamp::kLabelFieldNumber;
const int time_stamp::kStampStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

time_stamp::time_stamp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ccserver.time_stamp)
}

void time_stamp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

time_stamp::time_stamp(const time_stamp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ccserver.time_stamp)
}

void time_stamp::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  stamp_ = GOOGLE_LONGLONG(0);
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stamp_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

time_stamp::~time_stamp() {
  // @@protoc_insertion_point(destructor:ccserver.time_stamp)
  SharedDtor();
}

void time_stamp::SharedDtor() {
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stamp_str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void time_stamp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* time_stamp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return time_stamp_descriptor_;
}

const time_stamp& time_stamp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bankhall_2eproto();
  return *default_instance_;
}

time_stamp* time_stamp::default_instance_ = NULL;

time_stamp* time_stamp::New(::google::protobuf::Arena* arena) const {
  time_stamp* n = new time_stamp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void time_stamp::Clear() {
// @@protoc_insertion_point(message_clear_start:ccserver.time_stamp)
  stamp_ = GOOGLE_LONGLONG(0);
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stamp_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool time_stamp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ccserver.time_stamp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 stamp = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &stamp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_label;
        break;
      }

      // optional string label = 2;
      case 2: {
        if (tag == 18) {
         parse_label:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->label().data(), this->label().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ccserver.time_stamp.label"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_stamp_str;
        break;
      }

      // optional string stamp_str = 3;
      case 3: {
        if (tag == 26) {
         parse_stamp_str:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stamp_str()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stamp_str().data(), this->stamp_str().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ccserver.time_stamp.stamp_str"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ccserver.time_stamp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ccserver.time_stamp)
  return false;
#undef DO_
}

void time_stamp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ccserver.time_stamp)
  // optional sint64 stamp = 1;
  if (this->stamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->stamp(), output);
  }

  // optional string label = 2;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), this->label().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.time_stamp.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->label(), output);
  }

  // optional string stamp_str = 3;
  if (this->stamp_str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stamp_str().data(), this->stamp_str().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.time_stamp.stamp_str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->stamp_str(), output);
  }

  // @@protoc_insertion_point(serialize_end:ccserver.time_stamp)
}

::google::protobuf::uint8* time_stamp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ccserver.time_stamp)
  // optional sint64 stamp = 1;
  if (this->stamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->stamp(), target);
  }

  // optional string label = 2;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), this->label().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.time_stamp.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->label(), target);
  }

  // optional string stamp_str = 3;
  if (this->stamp_str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stamp_str().data(), this->stamp_str().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.time_stamp.stamp_str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->stamp_str(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ccserver.time_stamp)
  return target;
}

int time_stamp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ccserver.time_stamp)
  int total_size = 0;

  // optional sint64 stamp = 1;
  if (this->stamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->stamp());
  }

  // optional string label = 2;
  if (this->label().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->label());
  }

  // optional string stamp_str = 3;
  if (this->stamp_str().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stamp_str());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void time_stamp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ccserver.time_stamp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const time_stamp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const time_stamp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ccserver.time_stamp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ccserver.time_stamp)
    MergeFrom(*source);
  }
}

void time_stamp::MergeFrom(const time_stamp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ccserver.time_stamp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.stamp() != 0) {
    set_stamp(from.stamp());
  }
  if (from.label().size() > 0) {

    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  if (from.stamp_str().size() > 0) {

    stamp_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stamp_str_);
  }
}

void time_stamp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ccserver.time_stamp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void time_stamp::CopyFrom(const time_stamp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ccserver.time_stamp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool time_stamp::IsInitialized() const {

  return true;
}

void time_stamp::Swap(time_stamp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void time_stamp::InternalSwap(time_stamp* other) {
  std::swap(stamp_, other->stamp_);
  label_.Swap(&other->label_);
  stamp_str_.Swap(&other->stamp_str_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata time_stamp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = time_stamp_descriptor_;
  metadata.reflection = time_stamp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// time_stamp

// optional sint64 stamp = 1;
void time_stamp::clear_stamp() {
  stamp_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 time_stamp::stamp() const {
  // @@protoc_insertion_point(field_get:ccserver.time_stamp.stamp)
  return stamp_;
}
 void time_stamp::set_stamp(::google::protobuf::int64 value) {
  
  stamp_ = value;
  // @@protoc_insertion_point(field_set:ccserver.time_stamp.stamp)
}

// optional string label = 2;
void time_stamp::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& time_stamp::label() const {
  // @@protoc_insertion_point(field_get:ccserver.time_stamp.label)
  return label_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void time_stamp::set_label(const ::std::string& value) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ccserver.time_stamp.label)
}
 void time_stamp::set_label(const char* value) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ccserver.time_stamp.label)
}
 void time_stamp::set_label(const char* value, size_t size) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ccserver.time_stamp.label)
}
 ::std::string* time_stamp::mutable_label() {
  
  // @@protoc_insertion_point(field_mutable:ccserver.time_stamp.label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* time_stamp::release_label() {
  // @@protoc_insertion_point(field_release:ccserver.time_stamp.label)
  
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void time_stamp::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    
  } else {
    
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:ccserver.time_stamp.label)
}

// optional string stamp_str = 3;
void time_stamp::clear_stamp_str() {
  stamp_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& time_stamp::stamp_str() const {
  // @@protoc_insertion_point(field_get:ccserver.time_stamp.stamp_str)
  return stamp_str_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void time_stamp::set_stamp_str(const ::std::string& value) {
  
  stamp_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ccserver.time_stamp.stamp_str)
}
 void time_stamp::set_stamp_str(const char* value) {
  
  stamp_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ccserver.time_stamp.stamp_str)
}
 void time_stamp::set_stamp_str(const char* value, size_t size) {
  
  stamp_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ccserver.time_stamp.stamp_str)
}
 ::std::string* time_stamp::mutable_stamp_str() {
  
  // @@protoc_insertion_point(field_mutable:ccserver.time_stamp.stamp_str)
  return stamp_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* time_stamp::release_stamp_str() {
  // @@protoc_insertion_point(field_release:ccserver.time_stamp.stamp_str)
  
  return stamp_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void time_stamp::set_allocated_stamp_str(::std::string* stamp_str) {
  if (stamp_str != NULL) {
    
  } else {
    
  }
  stamp_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stamp_str);
  // @@protoc_insertion_point(field_set_allocated:ccserver.time_stamp.stamp_str)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int app_inter::kListenFidFieldNumber;
const int app_inter::kEpollFidFieldNumber;
const int app_inter::kConnFidFieldNumber;
const int app_inter::kCipherFieldNumber;
const int app_inter::kFidTypeFieldNumber;
const int app_inter::kBussnessNameFieldNumber;
const int app_inter::kCommandFieldNumber;
const int app_inter::kArgsClassFieldNumber;
const int app_inter::kArgsContIdxFieldNumber;
const int app_inter::kInfoFieldNumber;
const int app_inter::kBusnessMsgFieldNumber;
const int app_inter::kTsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

app_inter::app_inter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ccserver.app_inter)
}

void app_inter::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

app_inter::app_inter(const app_inter& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ccserver.app_inter)
}

void app_inter::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  listen_fid_ = 0;
  epoll_fid_ = 0;
  conn_fid_ = 0;
  cipher_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fid_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bussness_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  command_ = 0;
  args_class_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  args_cont_idx_ = 0;
  info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  busness_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

app_inter::~app_inter() {
  // @@protoc_insertion_point(destructor:ccserver.app_inter)
  SharedDtor();
}

void app_inter::SharedDtor() {
  cipher_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fid_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bussness_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  args_class_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  busness_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void app_inter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* app_inter::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return app_inter_descriptor_;
}

const app_inter& app_inter::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bankhall_2eproto();
  return *default_instance_;
}

app_inter* app_inter::default_instance_ = NULL;

app_inter* app_inter::New(::google::protobuf::Arena* arena) const {
  app_inter* n = new app_inter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void app_inter::Clear() {
// @@protoc_insertion_point(message_clear_start:ccserver.app_inter)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(app_inter, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<app_inter*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(listen_fid_, epoll_fid_);
  ZR_(conn_fid_, command_);
  cipher_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fid_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bussness_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  args_class_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  args_cont_idx_ = 0;
  info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  busness_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  ts_.Clear();
}

bool app_inter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ccserver.app_inter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 listen_fid = 2;
      case 2: {
        if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &listen_fid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_epoll_fid;
        break;
      }

      // optional sint32 epoll_fid = 3;
      case 3: {
        if (tag == 24) {
         parse_epoll_fid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &epoll_fid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_conn_fid;
        break;
      }

      // optional sint32 conn_fid = 4;
      case 4: {
        if (tag == 32) {
         parse_conn_fid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &conn_fid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_cipher;
        break;
      }

      // optional string cipher = 5;
      case 5: {
        if (tag == 42) {
         parse_cipher:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cipher()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cipher().data(), this->cipher().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ccserver.app_inter.cipher"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_fid_type;
        break;
      }

      // optional string fid_type = 6;
      case 6: {
        if (tag == 50) {
         parse_fid_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fid_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fid_type().data(), this->fid_type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ccserver.app_inter.fid_type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_bussness_name;
        break;
      }

      // optional string bussness_name = 7;
      case 7: {
        if (tag == 58) {
         parse_bussness_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bussness_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bussness_name().data(), this->bussness_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ccserver.app_inter.bussness_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_command;
        break;
      }

      // optional sint32 command = 8;
      case 8: {
        if (tag == 64) {
         parse_command:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &command_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_args_class;
        break;
      }

      // optional string args_class = 9;
      case 9: {
        if (tag == 74) {
         parse_args_class:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_args_class()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->args_class().data(), this->args_class().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ccserver.app_inter.args_class"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_args_cont_idx;
        break;
      }

      // optional sint32 args_cont_idx = 10;
      case 10: {
        if (tag == 80) {
         parse_args_cont_idx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &args_cont_idx_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_info;
        break;
      }

      // optional string info = 11;
      case 11: {
        if (tag == 90) {
         parse_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->info().data(), this->info().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ccserver.app_inter.info"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_busness_msg;
        break;
      }

      // optional bytes busness_msg = 14;
      case 14: {
        if (tag == 114) {
         parse_busness_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_busness_msg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_ts;
        break;
      }

      // repeated .ccserver.time_stamp ts = 15;
      case 15: {
        if (tag == 122) {
         parse_ts:
          DO_(input->IncrementRecursionDepth());
         parse_loop_ts:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_ts()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_loop_ts;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ccserver.app_inter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ccserver.app_inter)
  return false;
#undef DO_
}

void app_inter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ccserver.app_inter)
  // optional sint32 listen_fid = 2;
  if (this->listen_fid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->listen_fid(), output);
  }

  // optional sint32 epoll_fid = 3;
  if (this->epoll_fid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->epoll_fid(), output);
  }

  // optional sint32 conn_fid = 4;
  if (this->conn_fid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->conn_fid(), output);
  }

  // optional string cipher = 5;
  if (this->cipher().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cipher().data(), this->cipher().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.app_inter.cipher");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->cipher(), output);
  }

  // optional string fid_type = 6;
  if (this->fid_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fid_type().data(), this->fid_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.app_inter.fid_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->fid_type(), output);
  }

  // optional string bussness_name = 7;
  if (this->bussness_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bussness_name().data(), this->bussness_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.app_inter.bussness_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->bussness_name(), output);
  }

  // optional sint32 command = 8;
  if (this->command() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(8, this->command(), output);
  }

  // optional string args_class = 9;
  if (this->args_class().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->args_class().data(), this->args_class().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.app_inter.args_class");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->args_class(), output);
  }

  // optional sint32 args_cont_idx = 10;
  if (this->args_cont_idx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(10, this->args_cont_idx(), output);
  }

  // optional string info = 11;
  if (this->info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->info().data(), this->info().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.app_inter.info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->info(), output);
  }

  // optional bytes busness_msg = 14;
  if (this->busness_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      14, this->busness_msg(), output);
  }

  // repeated .ccserver.time_stamp ts = 15;
  for (unsigned int i = 0, n = this->ts_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->ts(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ccserver.app_inter)
}

::google::protobuf::uint8* app_inter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ccserver.app_inter)
  // optional sint32 listen_fid = 2;
  if (this->listen_fid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->listen_fid(), target);
  }

  // optional sint32 epoll_fid = 3;
  if (this->epoll_fid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->epoll_fid(), target);
  }

  // optional sint32 conn_fid = 4;
  if (this->conn_fid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->conn_fid(), target);
  }

  // optional string cipher = 5;
  if (this->cipher().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cipher().data(), this->cipher().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.app_inter.cipher");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->cipher(), target);
  }

  // optional string fid_type = 6;
  if (this->fid_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fid_type().data(), this->fid_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.app_inter.fid_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->fid_type(), target);
  }

  // optional string bussness_name = 7;
  if (this->bussness_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bussness_name().data(), this->bussness_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.app_inter.bussness_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->bussness_name(), target);
  }

  // optional sint32 command = 8;
  if (this->command() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(8, this->command(), target);
  }

  // optional string args_class = 9;
  if (this->args_class().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->args_class().data(), this->args_class().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.app_inter.args_class");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->args_class(), target);
  }

  // optional sint32 args_cont_idx = 10;
  if (this->args_cont_idx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(10, this->args_cont_idx(), target);
  }

  // optional string info = 11;
  if (this->info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->info().data(), this->info().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.app_inter.info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->info(), target);
  }

  // optional bytes busness_msg = 14;
  if (this->busness_msg().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        14, this->busness_msg(), target);
  }

  // repeated .ccserver.time_stamp ts = 15;
  for (unsigned int i = 0, n = this->ts_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, this->ts(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ccserver.app_inter)
  return target;
}

int app_inter::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ccserver.app_inter)
  int total_size = 0;

  // optional sint32 listen_fid = 2;
  if (this->listen_fid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->listen_fid());
  }

  // optional sint32 epoll_fid = 3;
  if (this->epoll_fid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->epoll_fid());
  }

  // optional sint32 conn_fid = 4;
  if (this->conn_fid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->conn_fid());
  }

  // optional string cipher = 5;
  if (this->cipher().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cipher());
  }

  // optional string fid_type = 6;
  if (this->fid_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fid_type());
  }

  // optional string bussness_name = 7;
  if (this->bussness_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bussness_name());
  }

  // optional sint32 command = 8;
  if (this->command() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->command());
  }

  // optional string args_class = 9;
  if (this->args_class().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->args_class());
  }

  // optional sint32 args_cont_idx = 10;
  if (this->args_cont_idx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->args_cont_idx());
  }

  // optional string info = 11;
  if (this->info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->info());
  }

  // optional bytes busness_msg = 14;
  if (this->busness_msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->busness_msg());
  }

  // repeated .ccserver.time_stamp ts = 15;
  total_size += 1 * this->ts_size();
  for (int i = 0; i < this->ts_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->ts(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void app_inter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ccserver.app_inter)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const app_inter* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const app_inter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ccserver.app_inter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ccserver.app_inter)
    MergeFrom(*source);
  }
}

void app_inter::MergeFrom(const app_inter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ccserver.app_inter)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  ts_.MergeFrom(from.ts_);
  if (from.listen_fid() != 0) {
    set_listen_fid(from.listen_fid());
  }
  if (from.epoll_fid() != 0) {
    set_epoll_fid(from.epoll_fid());
  }
  if (from.conn_fid() != 0) {
    set_conn_fid(from.conn_fid());
  }
  if (from.cipher().size() > 0) {

    cipher_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cipher_);
  }
  if (from.fid_type().size() > 0) {

    fid_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fid_type_);
  }
  if (from.bussness_name().size() > 0) {

    bussness_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bussness_name_);
  }
  if (from.command() != 0) {
    set_command(from.command());
  }
  if (from.args_class().size() > 0) {

    args_class_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.args_class_);
  }
  if (from.args_cont_idx() != 0) {
    set_args_cont_idx(from.args_cont_idx());
  }
  if (from.info().size() > 0) {

    info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.info_);
  }
  if (from.busness_msg().size() > 0) {

    busness_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.busness_msg_);
  }
}

void app_inter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ccserver.app_inter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void app_inter::CopyFrom(const app_inter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ccserver.app_inter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool app_inter::IsInitialized() const {

  return true;
}

void app_inter::Swap(app_inter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void app_inter::InternalSwap(app_inter* other) {
  std::swap(listen_fid_, other->listen_fid_);
  std::swap(epoll_fid_, other->epoll_fid_);
  std::swap(conn_fid_, other->conn_fid_);
  cipher_.Swap(&other->cipher_);
  fid_type_.Swap(&other->fid_type_);
  bussness_name_.Swap(&other->bussness_name_);
  std::swap(command_, other->command_);
  args_class_.Swap(&other->args_class_);
  std::swap(args_cont_idx_, other->args_cont_idx_);
  info_.Swap(&other->info_);
  busness_msg_.Swap(&other->busness_msg_);
  ts_.UnsafeArenaSwap(&other->ts_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata app_inter::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = app_inter_descriptor_;
  metadata.reflection = app_inter_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// app_inter

// optional sint32 listen_fid = 2;
void app_inter::clear_listen_fid() {
  listen_fid_ = 0;
}
 ::google::protobuf::int32 app_inter::listen_fid() const {
  // @@protoc_insertion_point(field_get:ccserver.app_inter.listen_fid)
  return listen_fid_;
}
 void app_inter::set_listen_fid(::google::protobuf::int32 value) {
  
  listen_fid_ = value;
  // @@protoc_insertion_point(field_set:ccserver.app_inter.listen_fid)
}

// optional sint32 epoll_fid = 3;
void app_inter::clear_epoll_fid() {
  epoll_fid_ = 0;
}
 ::google::protobuf::int32 app_inter::epoll_fid() const {
  // @@protoc_insertion_point(field_get:ccserver.app_inter.epoll_fid)
  return epoll_fid_;
}
 void app_inter::set_epoll_fid(::google::protobuf::int32 value) {
  
  epoll_fid_ = value;
  // @@protoc_insertion_point(field_set:ccserver.app_inter.epoll_fid)
}

// optional sint32 conn_fid = 4;
void app_inter::clear_conn_fid() {
  conn_fid_ = 0;
}
 ::google::protobuf::int32 app_inter::conn_fid() const {
  // @@protoc_insertion_point(field_get:ccserver.app_inter.conn_fid)
  return conn_fid_;
}
 void app_inter::set_conn_fid(::google::protobuf::int32 value) {
  
  conn_fid_ = value;
  // @@protoc_insertion_point(field_set:ccserver.app_inter.conn_fid)
}

// optional string cipher = 5;
void app_inter::clear_cipher() {
  cipher_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& app_inter::cipher() const {
  // @@protoc_insertion_point(field_get:ccserver.app_inter.cipher)
  return cipher_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void app_inter::set_cipher(const ::std::string& value) {
  
  cipher_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ccserver.app_inter.cipher)
}
 void app_inter::set_cipher(const char* value) {
  
  cipher_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ccserver.app_inter.cipher)
}
 void app_inter::set_cipher(const char* value, size_t size) {
  
  cipher_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ccserver.app_inter.cipher)
}
 ::std::string* app_inter::mutable_cipher() {
  
  // @@protoc_insertion_point(field_mutable:ccserver.app_inter.cipher)
  return cipher_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* app_inter::release_cipher() {
  // @@protoc_insertion_point(field_release:ccserver.app_inter.cipher)
  
  return cipher_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void app_inter::set_allocated_cipher(::std::string* cipher) {
  if (cipher != NULL) {
    
  } else {
    
  }
  cipher_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cipher);
  // @@protoc_insertion_point(field_set_allocated:ccserver.app_inter.cipher)
}

// optional string fid_type = 6;
void app_inter::clear_fid_type() {
  fid_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& app_inter::fid_type() const {
  // @@protoc_insertion_point(field_get:ccserver.app_inter.fid_type)
  return fid_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void app_inter::set_fid_type(const ::std::string& value) {
  
  fid_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ccserver.app_inter.fid_type)
}
 void app_inter::set_fid_type(const char* value) {
  
  fid_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ccserver.app_inter.fid_type)
}
 void app_inter::set_fid_type(const char* value, size_t size) {
  
  fid_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ccserver.app_inter.fid_type)
}
 ::std::string* app_inter::mutable_fid_type() {
  
  // @@protoc_insertion_point(field_mutable:ccserver.app_inter.fid_type)
  return fid_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* app_inter::release_fid_type() {
  // @@protoc_insertion_point(field_release:ccserver.app_inter.fid_type)
  
  return fid_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void app_inter::set_allocated_fid_type(::std::string* fid_type) {
  if (fid_type != NULL) {
    
  } else {
    
  }
  fid_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fid_type);
  // @@protoc_insertion_point(field_set_allocated:ccserver.app_inter.fid_type)
}

// optional string bussness_name = 7;
void app_inter::clear_bussness_name() {
  bussness_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& app_inter::bussness_name() const {
  // @@protoc_insertion_point(field_get:ccserver.app_inter.bussness_name)
  return bussness_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void app_inter::set_bussness_name(const ::std::string& value) {
  
  bussness_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ccserver.app_inter.bussness_name)
}
 void app_inter::set_bussness_name(const char* value) {
  
  bussness_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ccserver.app_inter.bussness_name)
}
 void app_inter::set_bussness_name(const char* value, size_t size) {
  
  bussness_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ccserver.app_inter.bussness_name)
}
 ::std::string* app_inter::mutable_bussness_name() {
  
  // @@protoc_insertion_point(field_mutable:ccserver.app_inter.bussness_name)
  return bussness_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* app_inter::release_bussness_name() {
  // @@protoc_insertion_point(field_release:ccserver.app_inter.bussness_name)
  
  return bussness_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void app_inter::set_allocated_bussness_name(::std::string* bussness_name) {
  if (bussness_name != NULL) {
    
  } else {
    
  }
  bussness_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bussness_name);
  // @@protoc_insertion_point(field_set_allocated:ccserver.app_inter.bussness_name)
}

// optional sint32 command = 8;
void app_inter::clear_command() {
  command_ = 0;
}
 ::google::protobuf::int32 app_inter::command() const {
  // @@protoc_insertion_point(field_get:ccserver.app_inter.command)
  return command_;
}
 void app_inter::set_command(::google::protobuf::int32 value) {
  
  command_ = value;
  // @@protoc_insertion_point(field_set:ccserver.app_inter.command)
}

// optional string args_class = 9;
void app_inter::clear_args_class() {
  args_class_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& app_inter::args_class() const {
  // @@protoc_insertion_point(field_get:ccserver.app_inter.args_class)
  return args_class_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void app_inter::set_args_class(const ::std::string& value) {
  
  args_class_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ccserver.app_inter.args_class)
}
 void app_inter::set_args_class(const char* value) {
  
  args_class_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ccserver.app_inter.args_class)
}
 void app_inter::set_args_class(const char* value, size_t size) {
  
  args_class_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ccserver.app_inter.args_class)
}
 ::std::string* app_inter::mutable_args_class() {
  
  // @@protoc_insertion_point(field_mutable:ccserver.app_inter.args_class)
  return args_class_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* app_inter::release_args_class() {
  // @@protoc_insertion_point(field_release:ccserver.app_inter.args_class)
  
  return args_class_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void app_inter::set_allocated_args_class(::std::string* args_class) {
  if (args_class != NULL) {
    
  } else {
    
  }
  args_class_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), args_class);
  // @@protoc_insertion_point(field_set_allocated:ccserver.app_inter.args_class)
}

// optional sint32 args_cont_idx = 10;
void app_inter::clear_args_cont_idx() {
  args_cont_idx_ = 0;
}
 ::google::protobuf::int32 app_inter::args_cont_idx() const {
  // @@protoc_insertion_point(field_get:ccserver.app_inter.args_cont_idx)
  return args_cont_idx_;
}
 void app_inter::set_args_cont_idx(::google::protobuf::int32 value) {
  
  args_cont_idx_ = value;
  // @@protoc_insertion_point(field_set:ccserver.app_inter.args_cont_idx)
}

// optional string info = 11;
void app_inter::clear_info() {
  info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& app_inter::info() const {
  // @@protoc_insertion_point(field_get:ccserver.app_inter.info)
  return info_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void app_inter::set_info(const ::std::string& value) {
  
  info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ccserver.app_inter.info)
}
 void app_inter::set_info(const char* value) {
  
  info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ccserver.app_inter.info)
}
 void app_inter::set_info(const char* value, size_t size) {
  
  info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ccserver.app_inter.info)
}
 ::std::string* app_inter::mutable_info() {
  
  // @@protoc_insertion_point(field_mutable:ccserver.app_inter.info)
  return info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* app_inter::release_info() {
  // @@protoc_insertion_point(field_release:ccserver.app_inter.info)
  
  return info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void app_inter::set_allocated_info(::std::string* info) {
  if (info != NULL) {
    
  } else {
    
  }
  info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), info);
  // @@protoc_insertion_point(field_set_allocated:ccserver.app_inter.info)
}

// optional bytes busness_msg = 14;
void app_inter::clear_busness_msg() {
  busness_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& app_inter::busness_msg() const {
  // @@protoc_insertion_point(field_get:ccserver.app_inter.busness_msg)
  return busness_msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void app_inter::set_busness_msg(const ::std::string& value) {
  
  busness_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ccserver.app_inter.busness_msg)
}
 void app_inter::set_busness_msg(const char* value) {
  
  busness_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ccserver.app_inter.busness_msg)
}
 void app_inter::set_busness_msg(const void* value, size_t size) {
  
  busness_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ccserver.app_inter.busness_msg)
}
 ::std::string* app_inter::mutable_busness_msg() {
  
  // @@protoc_insertion_point(field_mutable:ccserver.app_inter.busness_msg)
  return busness_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* app_inter::release_busness_msg() {
  // @@protoc_insertion_point(field_release:ccserver.app_inter.busness_msg)
  
  return busness_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void app_inter::set_allocated_busness_msg(::std::string* busness_msg) {
  if (busness_msg != NULL) {
    
  } else {
    
  }
  busness_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), busness_msg);
  // @@protoc_insertion_point(field_set_allocated:ccserver.app_inter.busness_msg)
}

// repeated .ccserver.time_stamp ts = 15;
int app_inter::ts_size() const {
  return ts_.size();
}
void app_inter::clear_ts() {
  ts_.Clear();
}
const ::ccserver::time_stamp& app_inter::ts(int index) const {
  // @@protoc_insertion_point(field_get:ccserver.app_inter.ts)
  return ts_.Get(index);
}
::ccserver::time_stamp* app_inter::mutable_ts(int index) {
  // @@protoc_insertion_point(field_mutable:ccserver.app_inter.ts)
  return ts_.Mutable(index);
}
::ccserver::time_stamp* app_inter::add_ts() {
  // @@protoc_insertion_point(field_add:ccserver.app_inter.ts)
  return ts_.Add();
}
::google::protobuf::RepeatedPtrField< ::ccserver::time_stamp >*
app_inter::mutable_ts() {
  // @@protoc_insertion_point(field_mutable_list:ccserver.app_inter.ts)
  return &ts_;
}
const ::google::protobuf::RepeatedPtrField< ::ccserver::time_stamp >&
app_inter::ts() const {
  // @@protoc_insertion_point(field_list:ccserver.app_inter.ts)
  return ts_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int outs_head::kFeedbackPortFieldNumber;
const int outs_head::kFeebackIpFieldNumber;
const int outs_head::kMessageIdFieldNumber;
const int outs_head::kWhoamiFieldNumber;
const int outs_head::kSignatureFieldNumber;
const int outs_head::kInfoFieldNumber;
const int outs_head::kTsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

outs_head::outs_head()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ccserver.outs_head)
}

void outs_head::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

outs_head::outs_head(const outs_head& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ccserver.outs_head)
}

void outs_head::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  feedback_port_ = 0;
  feeback_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  whoami_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

outs_head::~outs_head() {
  // @@protoc_insertion_point(destructor:ccserver.outs_head)
  SharedDtor();
}

void outs_head::SharedDtor() {
  feeback_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  whoami_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void outs_head::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* outs_head::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return outs_head_descriptor_;
}

const outs_head& outs_head::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bankhall_2eproto();
  return *default_instance_;
}

outs_head* outs_head::default_instance_ = NULL;

outs_head* outs_head::New(::google::protobuf::Arena* arena) const {
  outs_head* n = new outs_head;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void outs_head::Clear() {
// @@protoc_insertion_point(message_clear_start:ccserver.outs_head)
  feedback_port_ = 0;
  feeback_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  whoami_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ts_.Clear();
}

bool outs_head::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ccserver.outs_head)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 feedback_port = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &feedback_port_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_feeback_ip;
        break;
      }

      // optional string feeback_ip = 2;
      case 2: {
        if (tag == 18) {
         parse_feeback_ip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_feeback_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->feeback_ip().data(), this->feeback_ip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ccserver.outs_head.feeback_ip"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_message_id;
        break;
      }

      // optional string message_id = 3;
      case 3: {
        if (tag == 26) {
         parse_message_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message_id().data(), this->message_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ccserver.outs_head.message_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_whoami;
        break;
      }

      // optional string whoami = 4;
      case 4: {
        if (tag == 34) {
         parse_whoami:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_whoami()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->whoami().data(), this->whoami().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ccserver.outs_head.whoami"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_signature;
        break;
      }

      // optional string signature = 5;
      case 5: {
        if (tag == 42) {
         parse_signature:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signature()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->signature().data(), this->signature().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ccserver.outs_head.signature"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_info;
        break;
      }

      // optional string info = 6;
      case 6: {
        if (tag == 50) {
         parse_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->info().data(), this->info().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ccserver.outs_head.info"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_ts;
        break;
      }

      // repeated .ccserver.time_stamp ts = 14;
      case 14: {
        if (tag == 114) {
         parse_ts:
          DO_(input->IncrementRecursionDepth());
         parse_loop_ts:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_ts()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_loop_ts;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ccserver.outs_head)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ccserver.outs_head)
  return false;
#undef DO_
}

void outs_head::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ccserver.outs_head)
  // optional sint32 feedback_port = 1;
  if (this->feedback_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->feedback_port(), output);
  }

  // optional string feeback_ip = 2;
  if (this->feeback_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->feeback_ip().data(), this->feeback_ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.outs_head.feeback_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->feeback_ip(), output);
  }

  // optional string message_id = 3;
  if (this->message_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message_id().data(), this->message_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.outs_head.message_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->message_id(), output);
  }

  // optional string whoami = 4;
  if (this->whoami().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->whoami().data(), this->whoami().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.outs_head.whoami");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->whoami(), output);
  }

  // optional string signature = 5;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), this->signature().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.outs_head.signature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->signature(), output);
  }

  // optional string info = 6;
  if (this->info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->info().data(), this->info().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.outs_head.info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->info(), output);
  }

  // repeated .ccserver.time_stamp ts = 14;
  for (unsigned int i = 0, n = this->ts_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->ts(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ccserver.outs_head)
}

::google::protobuf::uint8* outs_head::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ccserver.outs_head)
  // optional sint32 feedback_port = 1;
  if (this->feedback_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->feedback_port(), target);
  }

  // optional string feeback_ip = 2;
  if (this->feeback_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->feeback_ip().data(), this->feeback_ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.outs_head.feeback_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->feeback_ip(), target);
  }

  // optional string message_id = 3;
  if (this->message_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message_id().data(), this->message_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.outs_head.message_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->message_id(), target);
  }

  // optional string whoami = 4;
  if (this->whoami().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->whoami().data(), this->whoami().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.outs_head.whoami");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->whoami(), target);
  }

  // optional string signature = 5;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), this->signature().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.outs_head.signature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->signature(), target);
  }

  // optional string info = 6;
  if (this->info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->info().data(), this->info().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.outs_head.info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->info(), target);
  }

  // repeated .ccserver.time_stamp ts = 14;
  for (unsigned int i = 0, n = this->ts_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, this->ts(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ccserver.outs_head)
  return target;
}

int outs_head::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ccserver.outs_head)
  int total_size = 0;

  // optional sint32 feedback_port = 1;
  if (this->feedback_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->feedback_port());
  }

  // optional string feeback_ip = 2;
  if (this->feeback_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->feeback_ip());
  }

  // optional string message_id = 3;
  if (this->message_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message_id());
  }

  // optional string whoami = 4;
  if (this->whoami().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->whoami());
  }

  // optional string signature = 5;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->signature());
  }

  // optional string info = 6;
  if (this->info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->info());
  }

  // repeated .ccserver.time_stamp ts = 14;
  total_size += 1 * this->ts_size();
  for (int i = 0; i < this->ts_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->ts(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void outs_head::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ccserver.outs_head)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const outs_head* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const outs_head>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ccserver.outs_head)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ccserver.outs_head)
    MergeFrom(*source);
  }
}

void outs_head::MergeFrom(const outs_head& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ccserver.outs_head)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  ts_.MergeFrom(from.ts_);
  if (from.feedback_port() != 0) {
    set_feedback_port(from.feedback_port());
  }
  if (from.feeback_ip().size() > 0) {

    feeback_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.feeback_ip_);
  }
  if (from.message_id().size() > 0) {

    message_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_id_);
  }
  if (from.whoami().size() > 0) {

    whoami_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.whoami_);
  }
  if (from.signature().size() > 0) {

    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  if (from.info().size() > 0) {

    info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.info_);
  }
}

void outs_head::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ccserver.outs_head)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void outs_head::CopyFrom(const outs_head& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ccserver.outs_head)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool outs_head::IsInitialized() const {

  return true;
}

void outs_head::Swap(outs_head* other) {
  if (other == this) return;
  InternalSwap(other);
}
void outs_head::InternalSwap(outs_head* other) {
  std::swap(feedback_port_, other->feedback_port_);
  feeback_ip_.Swap(&other->feeback_ip_);
  message_id_.Swap(&other->message_id_);
  whoami_.Swap(&other->whoami_);
  signature_.Swap(&other->signature_);
  info_.Swap(&other->info_);
  ts_.UnsafeArenaSwap(&other->ts_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata outs_head::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = outs_head_descriptor_;
  metadata.reflection = outs_head_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// outs_head

// optional sint32 feedback_port = 1;
void outs_head::clear_feedback_port() {
  feedback_port_ = 0;
}
 ::google::protobuf::int32 outs_head::feedback_port() const {
  // @@protoc_insertion_point(field_get:ccserver.outs_head.feedback_port)
  return feedback_port_;
}
 void outs_head::set_feedback_port(::google::protobuf::int32 value) {
  
  feedback_port_ = value;
  // @@protoc_insertion_point(field_set:ccserver.outs_head.feedback_port)
}

// optional string feeback_ip = 2;
void outs_head::clear_feeback_ip() {
  feeback_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& outs_head::feeback_ip() const {
  // @@protoc_insertion_point(field_get:ccserver.outs_head.feeback_ip)
  return feeback_ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void outs_head::set_feeback_ip(const ::std::string& value) {
  
  feeback_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ccserver.outs_head.feeback_ip)
}
 void outs_head::set_feeback_ip(const char* value) {
  
  feeback_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ccserver.outs_head.feeback_ip)
}
 void outs_head::set_feeback_ip(const char* value, size_t size) {
  
  feeback_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ccserver.outs_head.feeback_ip)
}
 ::std::string* outs_head::mutable_feeback_ip() {
  
  // @@protoc_insertion_point(field_mutable:ccserver.outs_head.feeback_ip)
  return feeback_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* outs_head::release_feeback_ip() {
  // @@protoc_insertion_point(field_release:ccserver.outs_head.feeback_ip)
  
  return feeback_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void outs_head::set_allocated_feeback_ip(::std::string* feeback_ip) {
  if (feeback_ip != NULL) {
    
  } else {
    
  }
  feeback_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), feeback_ip);
  // @@protoc_insertion_point(field_set_allocated:ccserver.outs_head.feeback_ip)
}

// optional string message_id = 3;
void outs_head::clear_message_id() {
  message_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& outs_head::message_id() const {
  // @@protoc_insertion_point(field_get:ccserver.outs_head.message_id)
  return message_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void outs_head::set_message_id(const ::std::string& value) {
  
  message_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ccserver.outs_head.message_id)
}
 void outs_head::set_message_id(const char* value) {
  
  message_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ccserver.outs_head.message_id)
}
 void outs_head::set_message_id(const char* value, size_t size) {
  
  message_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ccserver.outs_head.message_id)
}
 ::std::string* outs_head::mutable_message_id() {
  
  // @@protoc_insertion_point(field_mutable:ccserver.outs_head.message_id)
  return message_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* outs_head::release_message_id() {
  // @@protoc_insertion_point(field_release:ccserver.outs_head.message_id)
  
  return message_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void outs_head::set_allocated_message_id(::std::string* message_id) {
  if (message_id != NULL) {
    
  } else {
    
  }
  message_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message_id);
  // @@protoc_insertion_point(field_set_allocated:ccserver.outs_head.message_id)
}

// optional string whoami = 4;
void outs_head::clear_whoami() {
  whoami_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& outs_head::whoami() const {
  // @@protoc_insertion_point(field_get:ccserver.outs_head.whoami)
  return whoami_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void outs_head::set_whoami(const ::std::string& value) {
  
  whoami_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ccserver.outs_head.whoami)
}
 void outs_head::set_whoami(const char* value) {
  
  whoami_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ccserver.outs_head.whoami)
}
 void outs_head::set_whoami(const char* value, size_t size) {
  
  whoami_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ccserver.outs_head.whoami)
}
 ::std::string* outs_head::mutable_whoami() {
  
  // @@protoc_insertion_point(field_mutable:ccserver.outs_head.whoami)
  return whoami_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* outs_head::release_whoami() {
  // @@protoc_insertion_point(field_release:ccserver.outs_head.whoami)
  
  return whoami_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void outs_head::set_allocated_whoami(::std::string* whoami) {
  if (whoami != NULL) {
    
  } else {
    
  }
  whoami_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), whoami);
  // @@protoc_insertion_point(field_set_allocated:ccserver.outs_head.whoami)
}

// optional string signature = 5;
void outs_head::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& outs_head::signature() const {
  // @@protoc_insertion_point(field_get:ccserver.outs_head.signature)
  return signature_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void outs_head::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ccserver.outs_head.signature)
}
 void outs_head::set_signature(const char* value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ccserver.outs_head.signature)
}
 void outs_head::set_signature(const char* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ccserver.outs_head.signature)
}
 ::std::string* outs_head::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:ccserver.outs_head.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* outs_head::release_signature() {
  // @@protoc_insertion_point(field_release:ccserver.outs_head.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void outs_head::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:ccserver.outs_head.signature)
}

// optional string info = 6;
void outs_head::clear_info() {
  info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& outs_head::info() const {
  // @@protoc_insertion_point(field_get:ccserver.outs_head.info)
  return info_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void outs_head::set_info(const ::std::string& value) {
  
  info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ccserver.outs_head.info)
}
 void outs_head::set_info(const char* value) {
  
  info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ccserver.outs_head.info)
}
 void outs_head::set_info(const char* value, size_t size) {
  
  info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ccserver.outs_head.info)
}
 ::std::string* outs_head::mutable_info() {
  
  // @@protoc_insertion_point(field_mutable:ccserver.outs_head.info)
  return info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* outs_head::release_info() {
  // @@protoc_insertion_point(field_release:ccserver.outs_head.info)
  
  return info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void outs_head::set_allocated_info(::std::string* info) {
  if (info != NULL) {
    
  } else {
    
  }
  info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), info);
  // @@protoc_insertion_point(field_set_allocated:ccserver.outs_head.info)
}

// repeated .ccserver.time_stamp ts = 14;
int outs_head::ts_size() const {
  return ts_.size();
}
void outs_head::clear_ts() {
  ts_.Clear();
}
const ::ccserver::time_stamp& outs_head::ts(int index) const {
  // @@protoc_insertion_point(field_get:ccserver.outs_head.ts)
  return ts_.Get(index);
}
::ccserver::time_stamp* outs_head::mutable_ts(int index) {
  // @@protoc_insertion_point(field_mutable:ccserver.outs_head.ts)
  return ts_.Mutable(index);
}
::ccserver::time_stamp* outs_head::add_ts() {
  // @@protoc_insertion_point(field_add:ccserver.outs_head.ts)
  return ts_.Add();
}
::google::protobuf::RepeatedPtrField< ::ccserver::time_stamp >*
outs_head::mutable_ts() {
  // @@protoc_insertion_point(field_mutable_list:ccserver.outs_head.ts)
  return &ts_;
}
const ::google::protobuf::RepeatedPtrField< ::ccserver::time_stamp >&
outs_head::ts() const {
  // @@protoc_insertion_point(field_list:ccserver.outs_head.ts)
  return ts_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int outsourcing::kHeadFieldNumber;
const int outsourcing::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

outsourcing::outsourcing()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ccserver.outsourcing)
}

void outsourcing::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

outsourcing::outsourcing(const outsourcing& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ccserver.outsourcing)
}

void outsourcing::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

outsourcing::~outsourcing() {
  // @@protoc_insertion_point(destructor:ccserver.outsourcing)
  SharedDtor();
}

void outsourcing::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void outsourcing::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* outsourcing::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return outsourcing_descriptor_;
}

const outsourcing& outsourcing::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bankhall_2eproto();
  return *default_instance_;
}

outsourcing* outsourcing::default_instance_ = NULL;

outsourcing* outsourcing::New(::google::protobuf::Arena* arena) const {
  outsourcing* n = new outsourcing;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void outsourcing::Clear() {
// @@protoc_insertion_point(message_clear_start:ccserver.outsourcing)
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  head_.Clear();
}

bool outsourcing::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ccserver.outsourcing)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ccserver.outs_head head = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_head:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_head()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_head;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(122)) goto parse_data;
        break;
      }

      // optional bytes data = 15;
      case 15: {
        if (tag == 122) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ccserver.outsourcing)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ccserver.outsourcing)
  return false;
#undef DO_
}

void outsourcing::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ccserver.outsourcing)
  // repeated .ccserver.outs_head head = 1;
  for (unsigned int i = 0, n = this->head_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->head(i), output);
  }

  // optional bytes data = 15;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      15, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:ccserver.outsourcing)
}

::google::protobuf::uint8* outsourcing::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ccserver.outsourcing)
  // repeated .ccserver.outs_head head = 1;
  for (unsigned int i = 0, n = this->head_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->head(i), false, target);
  }

  // optional bytes data = 15;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        15, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ccserver.outsourcing)
  return target;
}

int outsourcing::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ccserver.outsourcing)
  int total_size = 0;

  // optional bytes data = 15;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // repeated .ccserver.outs_head head = 1;
  total_size += 1 * this->head_size();
  for (int i = 0; i < this->head_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->head(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void outsourcing::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ccserver.outsourcing)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const outsourcing* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const outsourcing>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ccserver.outsourcing)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ccserver.outsourcing)
    MergeFrom(*source);
  }
}

void outsourcing::MergeFrom(const outsourcing& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ccserver.outsourcing)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  head_.MergeFrom(from.head_);
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void outsourcing::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ccserver.outsourcing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void outsourcing::CopyFrom(const outsourcing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ccserver.outsourcing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool outsourcing::IsInitialized() const {

  return true;
}

void outsourcing::Swap(outsourcing* other) {
  if (other == this) return;
  InternalSwap(other);
}
void outsourcing::InternalSwap(outsourcing* other) {
  head_.UnsafeArenaSwap(&other->head_);
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata outsourcing::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = outsourcing_descriptor_;
  metadata.reflection = outsourcing_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// outsourcing

// repeated .ccserver.outs_head head = 1;
int outsourcing::head_size() const {
  return head_.size();
}
void outsourcing::clear_head() {
  head_.Clear();
}
const ::ccserver::outs_head& outsourcing::head(int index) const {
  // @@protoc_insertion_point(field_get:ccserver.outsourcing.head)
  return head_.Get(index);
}
::ccserver::outs_head* outsourcing::mutable_head(int index) {
  // @@protoc_insertion_point(field_mutable:ccserver.outsourcing.head)
  return head_.Mutable(index);
}
::ccserver::outs_head* outsourcing::add_head() {
  // @@protoc_insertion_point(field_add:ccserver.outsourcing.head)
  return head_.Add();
}
::google::protobuf::RepeatedPtrField< ::ccserver::outs_head >*
outsourcing::mutable_head() {
  // @@protoc_insertion_point(field_mutable_list:ccserver.outsourcing.head)
  return &head_;
}
const ::google::protobuf::RepeatedPtrField< ::ccserver::outs_head >&
outsourcing::head() const {
  // @@protoc_insertion_point(field_list:ccserver.outsourcing.head)
  return head_;
}

// optional bytes data = 15;
void outsourcing::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& outsourcing::data() const {
  // @@protoc_insertion_point(field_get:ccserver.outsourcing.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void outsourcing::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ccserver.outsourcing.data)
}
 void outsourcing::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ccserver.outsourcing.data)
}
 void outsourcing::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ccserver.outsourcing.data)
}
 ::std::string* outsourcing::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:ccserver.outsourcing.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* outsourcing::release_data() {
  // @@protoc_insertion_point(field_release:ccserver.outsourcing.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void outsourcing::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:ccserver.outsourcing.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int withdraw::kBusMsgIdFieldNumber;
const int withdraw::kSerialNoFieldNumber;
const int withdraw::kCardNoFieldNumber;
const int withdraw::kAmountFieldNumber;
const int withdraw::kCustomerFieldNumber;
const int withdraw::kTimeFieldNumber;
const int withdraw::kTsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

withdraw::withdraw()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ccserver.withdraw)
}

void withdraw::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

withdraw::withdraw(const withdraw& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ccserver.withdraw)
}

void withdraw::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  bus_msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serial_no_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  card_no_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_ = 0;
  customer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

withdraw::~withdraw() {
  // @@protoc_insertion_point(destructor:ccserver.withdraw)
  SharedDtor();
}

void withdraw::SharedDtor() {
  bus_msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serial_no_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  card_no_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void withdraw::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* withdraw::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return withdraw_descriptor_;
}

const withdraw& withdraw::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bankhall_2eproto();
  return *default_instance_;
}

withdraw* withdraw::default_instance_ = NULL;

withdraw* withdraw::New(::google::protobuf::Arena* arena) const {
  withdraw* n = new withdraw;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void withdraw::Clear() {
// @@protoc_insertion_point(message_clear_start:ccserver.withdraw)
  bus_msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serial_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  card_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_ = 0;
  customer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ts_.Clear();
}

bool withdraw::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ccserver.withdraw)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string bus_msg_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bus_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bus_msg_id().data(), this->bus_msg_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ccserver.withdraw.bus_msg_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_serial_no;
        break;
      }

      // optional string serial_no = 2;
      case 2: {
        if (tag == 18) {
         parse_serial_no:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serial_no()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->serial_no().data(), this->serial_no().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ccserver.withdraw.serial_no"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_card_no;
        break;
      }

      // optional string card_no = 3;
      case 3: {
        if (tag == 26) {
         parse_card_no:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_card_no()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->card_no().data(), this->card_no().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ccserver.withdraw.card_no"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_amount;
        break;
      }

      // optional sint32 amount = 4;
      case 4: {
        if (tag == 32) {
         parse_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &amount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_customer;
        break;
      }

      // optional string customer = 5;
      case 5: {
        if (tag == 42) {
         parse_customer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customer()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->customer().data(), this->customer().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ccserver.withdraw.customer"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_time;
        break;
      }

      // optional string time = 6;
      case 6: {
        if (tag == 50) {
         parse_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->time().data(), this->time().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ccserver.withdraw.time"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_ts;
        break;
      }

      // repeated .ccserver.time_stamp ts = 15;
      case 15: {
        if (tag == 122) {
         parse_ts:
          DO_(input->IncrementRecursionDepth());
         parse_loop_ts:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_ts()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_loop_ts;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ccserver.withdraw)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ccserver.withdraw)
  return false;
#undef DO_
}

void withdraw::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ccserver.withdraw)
  // optional string bus_msg_id = 1;
  if (this->bus_msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bus_msg_id().data(), this->bus_msg_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.withdraw.bus_msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->bus_msg_id(), output);
  }

  // optional string serial_no = 2;
  if (this->serial_no().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serial_no().data(), this->serial_no().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.withdraw.serial_no");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->serial_no(), output);
  }

  // optional string card_no = 3;
  if (this->card_no().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->card_no().data(), this->card_no().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.withdraw.card_no");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->card_no(), output);
  }

  // optional sint32 amount = 4;
  if (this->amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->amount(), output);
  }

  // optional string customer = 5;
  if (this->customer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->customer().data(), this->customer().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.withdraw.customer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->customer(), output);
  }

  // optional string time = 6;
  if (this->time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->time().data(), this->time().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.withdraw.time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->time(), output);
  }

  // repeated .ccserver.time_stamp ts = 15;
  for (unsigned int i = 0, n = this->ts_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->ts(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ccserver.withdraw)
}

::google::protobuf::uint8* withdraw::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ccserver.withdraw)
  // optional string bus_msg_id = 1;
  if (this->bus_msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bus_msg_id().data(), this->bus_msg_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.withdraw.bus_msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bus_msg_id(), target);
  }

  // optional string serial_no = 2;
  if (this->serial_no().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serial_no().data(), this->serial_no().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.withdraw.serial_no");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->serial_no(), target);
  }

  // optional string card_no = 3;
  if (this->card_no().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->card_no().data(), this->card_no().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.withdraw.card_no");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->card_no(), target);
  }

  // optional sint32 amount = 4;
  if (this->amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->amount(), target);
  }

  // optional string customer = 5;
  if (this->customer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->customer().data(), this->customer().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.withdraw.customer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->customer(), target);
  }

  // optional string time = 6;
  if (this->time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->time().data(), this->time().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.withdraw.time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->time(), target);
  }

  // repeated .ccserver.time_stamp ts = 15;
  for (unsigned int i = 0, n = this->ts_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, this->ts(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ccserver.withdraw)
  return target;
}

int withdraw::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ccserver.withdraw)
  int total_size = 0;

  // optional string bus_msg_id = 1;
  if (this->bus_msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bus_msg_id());
  }

  // optional string serial_no = 2;
  if (this->serial_no().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->serial_no());
  }

  // optional string card_no = 3;
  if (this->card_no().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->card_no());
  }

  // optional sint32 amount = 4;
  if (this->amount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->amount());
  }

  // optional string customer = 5;
  if (this->customer().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->customer());
  }

  // optional string time = 6;
  if (this->time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->time());
  }

  // repeated .ccserver.time_stamp ts = 15;
  total_size += 1 * this->ts_size();
  for (int i = 0; i < this->ts_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->ts(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void withdraw::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ccserver.withdraw)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const withdraw* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const withdraw>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ccserver.withdraw)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ccserver.withdraw)
    MergeFrom(*source);
  }
}

void withdraw::MergeFrom(const withdraw& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ccserver.withdraw)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  ts_.MergeFrom(from.ts_);
  if (from.bus_msg_id().size() > 0) {

    bus_msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bus_msg_id_);
  }
  if (from.serial_no().size() > 0) {

    serial_no_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serial_no_);
  }
  if (from.card_no().size() > 0) {

    card_no_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.card_no_);
  }
  if (from.amount() != 0) {
    set_amount(from.amount());
  }
  if (from.customer().size() > 0) {

    customer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.customer_);
  }
  if (from.time().size() > 0) {

    time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_);
  }
}

void withdraw::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ccserver.withdraw)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void withdraw::CopyFrom(const withdraw& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ccserver.withdraw)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool withdraw::IsInitialized() const {

  return true;
}

void withdraw::Swap(withdraw* other) {
  if (other == this) return;
  InternalSwap(other);
}
void withdraw::InternalSwap(withdraw* other) {
  bus_msg_id_.Swap(&other->bus_msg_id_);
  serial_no_.Swap(&other->serial_no_);
  card_no_.Swap(&other->card_no_);
  std::swap(amount_, other->amount_);
  customer_.Swap(&other->customer_);
  time_.Swap(&other->time_);
  ts_.UnsafeArenaSwap(&other->ts_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata withdraw::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = withdraw_descriptor_;
  metadata.reflection = withdraw_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// withdraw

// optional string bus_msg_id = 1;
void withdraw::clear_bus_msg_id() {
  bus_msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& withdraw::bus_msg_id() const {
  // @@protoc_insertion_point(field_get:ccserver.withdraw.bus_msg_id)
  return bus_msg_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void withdraw::set_bus_msg_id(const ::std::string& value) {
  
  bus_msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ccserver.withdraw.bus_msg_id)
}
 void withdraw::set_bus_msg_id(const char* value) {
  
  bus_msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ccserver.withdraw.bus_msg_id)
}
 void withdraw::set_bus_msg_id(const char* value, size_t size) {
  
  bus_msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ccserver.withdraw.bus_msg_id)
}
 ::std::string* withdraw::mutable_bus_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:ccserver.withdraw.bus_msg_id)
  return bus_msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* withdraw::release_bus_msg_id() {
  // @@protoc_insertion_point(field_release:ccserver.withdraw.bus_msg_id)
  
  return bus_msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void withdraw::set_allocated_bus_msg_id(::std::string* bus_msg_id) {
  if (bus_msg_id != NULL) {
    
  } else {
    
  }
  bus_msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bus_msg_id);
  // @@protoc_insertion_point(field_set_allocated:ccserver.withdraw.bus_msg_id)
}

// optional string serial_no = 2;
void withdraw::clear_serial_no() {
  serial_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& withdraw::serial_no() const {
  // @@protoc_insertion_point(field_get:ccserver.withdraw.serial_no)
  return serial_no_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void withdraw::set_serial_no(const ::std::string& value) {
  
  serial_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ccserver.withdraw.serial_no)
}
 void withdraw::set_serial_no(const char* value) {
  
  serial_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ccserver.withdraw.serial_no)
}
 void withdraw::set_serial_no(const char* value, size_t size) {
  
  serial_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ccserver.withdraw.serial_no)
}
 ::std::string* withdraw::mutable_serial_no() {
  
  // @@protoc_insertion_point(field_mutable:ccserver.withdraw.serial_no)
  return serial_no_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* withdraw::release_serial_no() {
  // @@protoc_insertion_point(field_release:ccserver.withdraw.serial_no)
  
  return serial_no_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void withdraw::set_allocated_serial_no(::std::string* serial_no) {
  if (serial_no != NULL) {
    
  } else {
    
  }
  serial_no_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serial_no);
  // @@protoc_insertion_point(field_set_allocated:ccserver.withdraw.serial_no)
}

// optional string card_no = 3;
void withdraw::clear_card_no() {
  card_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& withdraw::card_no() const {
  // @@protoc_insertion_point(field_get:ccserver.withdraw.card_no)
  return card_no_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void withdraw::set_card_no(const ::std::string& value) {
  
  card_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ccserver.withdraw.card_no)
}
 void withdraw::set_card_no(const char* value) {
  
  card_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ccserver.withdraw.card_no)
}
 void withdraw::set_card_no(const char* value, size_t size) {
  
  card_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ccserver.withdraw.card_no)
}
 ::std::string* withdraw::mutable_card_no() {
  
  // @@protoc_insertion_point(field_mutable:ccserver.withdraw.card_no)
  return card_no_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* withdraw::release_card_no() {
  // @@protoc_insertion_point(field_release:ccserver.withdraw.card_no)
  
  return card_no_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void withdraw::set_allocated_card_no(::std::string* card_no) {
  if (card_no != NULL) {
    
  } else {
    
  }
  card_no_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), card_no);
  // @@protoc_insertion_point(field_set_allocated:ccserver.withdraw.card_no)
}

// optional sint32 amount = 4;
void withdraw::clear_amount() {
  amount_ = 0;
}
 ::google::protobuf::int32 withdraw::amount() const {
  // @@protoc_insertion_point(field_get:ccserver.withdraw.amount)
  return amount_;
}
 void withdraw::set_amount(::google::protobuf::int32 value) {
  
  amount_ = value;
  // @@protoc_insertion_point(field_set:ccserver.withdraw.amount)
}

// optional string customer = 5;
void withdraw::clear_customer() {
  customer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& withdraw::customer() const {
  // @@protoc_insertion_point(field_get:ccserver.withdraw.customer)
  return customer_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void withdraw::set_customer(const ::std::string& value) {
  
  customer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ccserver.withdraw.customer)
}
 void withdraw::set_customer(const char* value) {
  
  customer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ccserver.withdraw.customer)
}
 void withdraw::set_customer(const char* value, size_t size) {
  
  customer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ccserver.withdraw.customer)
}
 ::std::string* withdraw::mutable_customer() {
  
  // @@protoc_insertion_point(field_mutable:ccserver.withdraw.customer)
  return customer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* withdraw::release_customer() {
  // @@protoc_insertion_point(field_release:ccserver.withdraw.customer)
  
  return customer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void withdraw::set_allocated_customer(::std::string* customer) {
  if (customer != NULL) {
    
  } else {
    
  }
  customer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), customer);
  // @@protoc_insertion_point(field_set_allocated:ccserver.withdraw.customer)
}

// optional string time = 6;
void withdraw::clear_time() {
  time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& withdraw::time() const {
  // @@protoc_insertion_point(field_get:ccserver.withdraw.time)
  return time_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void withdraw::set_time(const ::std::string& value) {
  
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ccserver.withdraw.time)
}
 void withdraw::set_time(const char* value) {
  
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ccserver.withdraw.time)
}
 void withdraw::set_time(const char* value, size_t size) {
  
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ccserver.withdraw.time)
}
 ::std::string* withdraw::mutable_time() {
  
  // @@protoc_insertion_point(field_mutable:ccserver.withdraw.time)
  return time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* withdraw::release_time() {
  // @@protoc_insertion_point(field_release:ccserver.withdraw.time)
  
  return time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void withdraw::set_allocated_time(::std::string* time) {
  if (time != NULL) {
    
  } else {
    
  }
  time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), time);
  // @@protoc_insertion_point(field_set_allocated:ccserver.withdraw.time)
}

// repeated .ccserver.time_stamp ts = 15;
int withdraw::ts_size() const {
  return ts_.size();
}
void withdraw::clear_ts() {
  ts_.Clear();
}
const ::ccserver::time_stamp& withdraw::ts(int index) const {
  // @@protoc_insertion_point(field_get:ccserver.withdraw.ts)
  return ts_.Get(index);
}
::ccserver::time_stamp* withdraw::mutable_ts(int index) {
  // @@protoc_insertion_point(field_mutable:ccserver.withdraw.ts)
  return ts_.Mutable(index);
}
::ccserver::time_stamp* withdraw::add_ts() {
  // @@protoc_insertion_point(field_add:ccserver.withdraw.ts)
  return ts_.Add();
}
::google::protobuf::RepeatedPtrField< ::ccserver::time_stamp >*
withdraw::mutable_ts() {
  // @@protoc_insertion_point(field_mutable_list:ccserver.withdraw.ts)
  return &ts_;
}
const ::google::protobuf::RepeatedPtrField< ::ccserver::time_stamp >&
withdraw::ts() const {
  // @@protoc_insertion_point(field_list:ccserver.withdraw.ts)
  return ts_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int deposit::kBusMsgIdFieldNumber;
const int deposit::kSerialNoFieldNumber;
const int deposit::kCardNoFieldNumber;
const int deposit::kAmountFieldNumber;
const int deposit::kCustomerFieldNumber;
const int deposit::kTimeFieldNumber;
const int deposit::kTsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

deposit::deposit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ccserver.deposit)
}

void deposit::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

deposit::deposit(const deposit& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ccserver.deposit)
}

void deposit::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  bus_msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serial_no_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  card_no_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_ = 0;
  customer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

deposit::~deposit() {
  // @@protoc_insertion_point(destructor:ccserver.deposit)
  SharedDtor();
}

void deposit::SharedDtor() {
  bus_msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serial_no_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  card_no_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void deposit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* deposit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return deposit_descriptor_;
}

const deposit& deposit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bankhall_2eproto();
  return *default_instance_;
}

deposit* deposit::default_instance_ = NULL;

deposit* deposit::New(::google::protobuf::Arena* arena) const {
  deposit* n = new deposit;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void deposit::Clear() {
// @@protoc_insertion_point(message_clear_start:ccserver.deposit)
  bus_msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serial_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  card_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_ = 0;
  customer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ts_.Clear();
}

bool deposit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ccserver.deposit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string bus_msg_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bus_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bus_msg_id().data(), this->bus_msg_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ccserver.deposit.bus_msg_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_serial_no;
        break;
      }

      // optional string serial_no = 2;
      case 2: {
        if (tag == 18) {
         parse_serial_no:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serial_no()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->serial_no().data(), this->serial_no().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ccserver.deposit.serial_no"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_card_no;
        break;
      }

      // optional string card_no = 3;
      case 3: {
        if (tag == 26) {
         parse_card_no:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_card_no()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->card_no().data(), this->card_no().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ccserver.deposit.card_no"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_amount;
        break;
      }

      // optional sint32 amount = 4;
      case 4: {
        if (tag == 32) {
         parse_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &amount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_customer;
        break;
      }

      // optional string customer = 5;
      case 5: {
        if (tag == 42) {
         parse_customer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customer()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->customer().data(), this->customer().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ccserver.deposit.customer"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_time;
        break;
      }

      // optional string time = 6;
      case 6: {
        if (tag == 50) {
         parse_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->time().data(), this->time().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ccserver.deposit.time"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_ts;
        break;
      }

      // repeated .ccserver.time_stamp ts = 15;
      case 15: {
        if (tag == 122) {
         parse_ts:
          DO_(input->IncrementRecursionDepth());
         parse_loop_ts:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_ts()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_loop_ts;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ccserver.deposit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ccserver.deposit)
  return false;
#undef DO_
}

void deposit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ccserver.deposit)
  // optional string bus_msg_id = 1;
  if (this->bus_msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bus_msg_id().data(), this->bus_msg_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.deposit.bus_msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->bus_msg_id(), output);
  }

  // optional string serial_no = 2;
  if (this->serial_no().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serial_no().data(), this->serial_no().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.deposit.serial_no");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->serial_no(), output);
  }

  // optional string card_no = 3;
  if (this->card_no().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->card_no().data(), this->card_no().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.deposit.card_no");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->card_no(), output);
  }

  // optional sint32 amount = 4;
  if (this->amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->amount(), output);
  }

  // optional string customer = 5;
  if (this->customer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->customer().data(), this->customer().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.deposit.customer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->customer(), output);
  }

  // optional string time = 6;
  if (this->time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->time().data(), this->time().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.deposit.time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->time(), output);
  }

  // repeated .ccserver.time_stamp ts = 15;
  for (unsigned int i = 0, n = this->ts_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->ts(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ccserver.deposit)
}

::google::protobuf::uint8* deposit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ccserver.deposit)
  // optional string bus_msg_id = 1;
  if (this->bus_msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bus_msg_id().data(), this->bus_msg_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.deposit.bus_msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bus_msg_id(), target);
  }

  // optional string serial_no = 2;
  if (this->serial_no().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serial_no().data(), this->serial_no().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.deposit.serial_no");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->serial_no(), target);
  }

  // optional string card_no = 3;
  if (this->card_no().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->card_no().data(), this->card_no().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.deposit.card_no");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->card_no(), target);
  }

  // optional sint32 amount = 4;
  if (this->amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->amount(), target);
  }

  // optional string customer = 5;
  if (this->customer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->customer().data(), this->customer().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.deposit.customer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->customer(), target);
  }

  // optional string time = 6;
  if (this->time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->time().data(), this->time().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ccserver.deposit.time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->time(), target);
  }

  // repeated .ccserver.time_stamp ts = 15;
  for (unsigned int i = 0, n = this->ts_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, this->ts(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ccserver.deposit)
  return target;
}

int deposit::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ccserver.deposit)
  int total_size = 0;

  // optional string bus_msg_id = 1;
  if (this->bus_msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bus_msg_id());
  }

  // optional string serial_no = 2;
  if (this->serial_no().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->serial_no());
  }

  // optional string card_no = 3;
  if (this->card_no().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->card_no());
  }

  // optional sint32 amount = 4;
  if (this->amount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->amount());
  }

  // optional string customer = 5;
  if (this->customer().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->customer());
  }

  // optional string time = 6;
  if (this->time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->time());
  }

  // repeated .ccserver.time_stamp ts = 15;
  total_size += 1 * this->ts_size();
  for (int i = 0; i < this->ts_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->ts(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void deposit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ccserver.deposit)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const deposit* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const deposit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ccserver.deposit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ccserver.deposit)
    MergeFrom(*source);
  }
}

void deposit::MergeFrom(const deposit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ccserver.deposit)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  ts_.MergeFrom(from.ts_);
  if (from.bus_msg_id().size() > 0) {

    bus_msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bus_msg_id_);
  }
  if (from.serial_no().size() > 0) {

    serial_no_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serial_no_);
  }
  if (from.card_no().size() > 0) {

    card_no_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.card_no_);
  }
  if (from.amount() != 0) {
    set_amount(from.amount());
  }
  if (from.customer().size() > 0) {

    customer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.customer_);
  }
  if (from.time().size() > 0) {

    time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_);
  }
}

void deposit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ccserver.deposit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void deposit::CopyFrom(const deposit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ccserver.deposit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool deposit::IsInitialized() const {

  return true;
}

void deposit::Swap(deposit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void deposit::InternalSwap(deposit* other) {
  bus_msg_id_.Swap(&other->bus_msg_id_);
  serial_no_.Swap(&other->serial_no_);
  card_no_.Swap(&other->card_no_);
  std::swap(amount_, other->amount_);
  customer_.Swap(&other->customer_);
  time_.Swap(&other->time_);
  ts_.UnsafeArenaSwap(&other->ts_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata deposit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = deposit_descriptor_;
  metadata.reflection = deposit_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// deposit

// optional string bus_msg_id = 1;
void deposit::clear_bus_msg_id() {
  bus_msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& deposit::bus_msg_id() const {
  // @@protoc_insertion_point(field_get:ccserver.deposit.bus_msg_id)
  return bus_msg_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void deposit::set_bus_msg_id(const ::std::string& value) {
  
  bus_msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ccserver.deposit.bus_msg_id)
}
 void deposit::set_bus_msg_id(const char* value) {
  
  bus_msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ccserver.deposit.bus_msg_id)
}
 void deposit::set_bus_msg_id(const char* value, size_t size) {
  
  bus_msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ccserver.deposit.bus_msg_id)
}
 ::std::string* deposit::mutable_bus_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:ccserver.deposit.bus_msg_id)
  return bus_msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* deposit::release_bus_msg_id() {
  // @@protoc_insertion_point(field_release:ccserver.deposit.bus_msg_id)
  
  return bus_msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void deposit::set_allocated_bus_msg_id(::std::string* bus_msg_id) {
  if (bus_msg_id != NULL) {
    
  } else {
    
  }
  bus_msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bus_msg_id);
  // @@protoc_insertion_point(field_set_allocated:ccserver.deposit.bus_msg_id)
}

// optional string serial_no = 2;
void deposit::clear_serial_no() {
  serial_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& deposit::serial_no() const {
  // @@protoc_insertion_point(field_get:ccserver.deposit.serial_no)
  return serial_no_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void deposit::set_serial_no(const ::std::string& value) {
  
  serial_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ccserver.deposit.serial_no)
}
 void deposit::set_serial_no(const char* value) {
  
  serial_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ccserver.deposit.serial_no)
}
 void deposit::set_serial_no(const char* value, size_t size) {
  
  serial_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ccserver.deposit.serial_no)
}
 ::std::string* deposit::mutable_serial_no() {
  
  // @@protoc_insertion_point(field_mutable:ccserver.deposit.serial_no)
  return serial_no_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* deposit::release_serial_no() {
  // @@protoc_insertion_point(field_release:ccserver.deposit.serial_no)
  
  return serial_no_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void deposit::set_allocated_serial_no(::std::string* serial_no) {
  if (serial_no != NULL) {
    
  } else {
    
  }
  serial_no_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serial_no);
  // @@protoc_insertion_point(field_set_allocated:ccserver.deposit.serial_no)
}

// optional string card_no = 3;
void deposit::clear_card_no() {
  card_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& deposit::card_no() const {
  // @@protoc_insertion_point(field_get:ccserver.deposit.card_no)
  return card_no_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void deposit::set_card_no(const ::std::string& value) {
  
  card_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ccserver.deposit.card_no)
}
 void deposit::set_card_no(const char* value) {
  
  card_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ccserver.deposit.card_no)
}
 void deposit::set_card_no(const char* value, size_t size) {
  
  card_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ccserver.deposit.card_no)
}
 ::std::string* deposit::mutable_card_no() {
  
  // @@protoc_insertion_point(field_mutable:ccserver.deposit.card_no)
  return card_no_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* deposit::release_card_no() {
  // @@protoc_insertion_point(field_release:ccserver.deposit.card_no)
  
  return card_no_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void deposit::set_allocated_card_no(::std::string* card_no) {
  if (card_no != NULL) {
    
  } else {
    
  }
  card_no_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), card_no);
  // @@protoc_insertion_point(field_set_allocated:ccserver.deposit.card_no)
}

// optional sint32 amount = 4;
void deposit::clear_amount() {
  amount_ = 0;
}
 ::google::protobuf::int32 deposit::amount() const {
  // @@protoc_insertion_point(field_get:ccserver.deposit.amount)
  return amount_;
}
 void deposit::set_amount(::google::protobuf::int32 value) {
  
  amount_ = value;
  // @@protoc_insertion_point(field_set:ccserver.deposit.amount)
}

// optional string customer = 5;
void deposit::clear_customer() {
  customer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& deposit::customer() const {
  // @@protoc_insertion_point(field_get:ccserver.deposit.customer)
  return customer_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void deposit::set_customer(const ::std::string& value) {
  
  customer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ccserver.deposit.customer)
}
 void deposit::set_customer(const char* value) {
  
  customer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ccserver.deposit.customer)
}
 void deposit::set_customer(const char* value, size_t size) {
  
  customer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ccserver.deposit.customer)
}
 ::std::string* deposit::mutable_customer() {
  
  // @@protoc_insertion_point(field_mutable:ccserver.deposit.customer)
  return customer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* deposit::release_customer() {
  // @@protoc_insertion_point(field_release:ccserver.deposit.customer)
  
  return customer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void deposit::set_allocated_customer(::std::string* customer) {
  if (customer != NULL) {
    
  } else {
    
  }
  customer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), customer);
  // @@protoc_insertion_point(field_set_allocated:ccserver.deposit.customer)
}

// optional string time = 6;
void deposit::clear_time() {
  time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& deposit::time() const {
  // @@protoc_insertion_point(field_get:ccserver.deposit.time)
  return time_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void deposit::set_time(const ::std::string& value) {
  
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ccserver.deposit.time)
}
 void deposit::set_time(const char* value) {
  
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ccserver.deposit.time)
}
 void deposit::set_time(const char* value, size_t size) {
  
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ccserver.deposit.time)
}
 ::std::string* deposit::mutable_time() {
  
  // @@protoc_insertion_point(field_mutable:ccserver.deposit.time)
  return time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* deposit::release_time() {
  // @@protoc_insertion_point(field_release:ccserver.deposit.time)
  
  return time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void deposit::set_allocated_time(::std::string* time) {
  if (time != NULL) {
    
  } else {
    
  }
  time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), time);
  // @@protoc_insertion_point(field_set_allocated:ccserver.deposit.time)
}

// repeated .ccserver.time_stamp ts = 15;
int deposit::ts_size() const {
  return ts_.size();
}
void deposit::clear_ts() {
  ts_.Clear();
}
const ::ccserver::time_stamp& deposit::ts(int index) const {
  // @@protoc_insertion_point(field_get:ccserver.deposit.ts)
  return ts_.Get(index);
}
::ccserver::time_stamp* deposit::mutable_ts(int index) {
  // @@protoc_insertion_point(field_mutable:ccserver.deposit.ts)
  return ts_.Mutable(index);
}
::ccserver::time_stamp* deposit::add_ts() {
  // @@protoc_insertion_point(field_add:ccserver.deposit.ts)
  return ts_.Add();
}
::google::protobuf::RepeatedPtrField< ::ccserver::time_stamp >*
deposit::mutable_ts() {
  // @@protoc_insertion_point(field_mutable_list:ccserver.deposit.ts)
  return &ts_;
}
const ::google::protobuf::RepeatedPtrField< ::ccserver::time_stamp >&
deposit::ts() const {
  // @@protoc_insertion_point(field_list:ccserver.deposit.ts)
  return ts_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ccserver

// @@protoc_insertion_point(global_scope)
